name: ci

on:
  pull_request:
    branches: [ main ]
  push:
    branches: [ main ]


jobs:
  setup:
    outputs:
      terraform_version: ${{ steps.terraform_version.outputs.terraform_version }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Get terraform version
        id: terraform_version
        run: echo "terraform_version=$(cat .terraform-version)" >> $GITHUB_OUTPUT

      - name: Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ steps.terraform_version.outputs.terraform_version }}

  docs:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ needs.setup.outputs.terraform_version }}

      - name: Install dependency
        run: |
          curl -sSL https://github.com/terraform-docs/terraform-docs/releases/download/v0.19.0/terraform-docs-v0.19.0-$(uname)-amd64.tar.gz -o "${HOME}/terraform-docs.tar.gz"
          tar -xzf "${HOME}/terraform-docs.tar.gz" -C "${HOME}"
          chmod +x "${HOME}/terraform-docs"
          echo "$HOME" >> $GITHUB_PATH
    
      # TODO: Something fails on CI, but works locally, ignoring error for now.
      - name: Docs
        continue-on-error: true
        run: |
          make docs-update
          if [[ $(git --no-pager diff --name-only aws/) ]]; then
            echo "Documentation not up to date, please run 'make docs-update' and commit your changes"
            echo
            echo "################################"
            echo "The following changes were found"
            git --no-pager diff --name-only aws/
            exit 1
          fi

  fmt:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ needs.setup.outputs.terraform_version }}

      - name: Format
        id: fmt
        run: make lint

  validate:
    needs: setup
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Terraform Setup
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ needs.setup.outputs.terraform_version }}

      - name: Validate
        id: validate
        run: |
          echo "${CI}"
          make validate
